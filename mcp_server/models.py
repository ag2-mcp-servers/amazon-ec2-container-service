# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T11:09:02+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, SecretStr, conint, constr


class AccessDeniedException(RootModel[Any]):
    root: Any


class AgentUpdateStatus(Enum):
    PENDING = 'PENDING'
    STAGING = 'STAGING'
    STAGED = 'STAGED'
    UPDATING = 'UPDATING'
    UPDATED = 'UPDATED'
    FAILED = 'FAILED'


class ApplicationProtocol(Enum):
    http = 'http'
    http2 = 'http2'
    grpc = 'grpc'


class AssignPublicIp(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class AttributeLimitExceededException(RootModel[Any]):
    root: Any


class BlockedException(RootModel[Any]):
    root: Any


class Boolean(RootModel[bool]):
    root: bool


class BoxedBoolean(RootModel[bool]):
    root: bool


class BoxedInteger(RootModel[int]):
    root: int


class CPUArchitecture(Enum):
    X86_64 = 'X86_64'
    ARM64 = 'ARM64'


class CapacityProviderField(Enum):
    TAGS = 'TAGS'


class CapacityProviderFieldList(RootModel[List[CapacityProviderField]]):
    root: List[CapacityProviderField]


class CapacityProviderStatus(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class CapacityProviderStrategyItemBase(RootModel[conint(ge=0, le=100000)]):
    root: conint(ge=0, le=100000)


class CapacityProviderStrategyItemWeight(RootModel[conint(ge=0, le=1000)]):
    root: conint(ge=0, le=1000)


class CapacityProviderUpdateStatus(Enum):
    DELETE_IN_PROGRESS = 'DELETE_IN_PROGRESS'
    DELETE_COMPLETE = 'DELETE_COMPLETE'
    DELETE_FAILED = 'DELETE_FAILED'
    UPDATE_IN_PROGRESS = 'UPDATE_IN_PROGRESS'
    UPDATE_COMPLETE = 'UPDATE_COMPLETE'
    UPDATE_FAILED = 'UPDATE_FAILED'


class ClientException(RootModel[Any]):
    root: Any


class ClusterContainsContainerInstancesException(RootModel[Any]):
    root: Any


class ClusterContainsServicesException(RootModel[Any]):
    root: Any


class ClusterContainsTasksException(RootModel[Any]):
    root: Any


class ClusterField(Enum):
    ATTACHMENTS = 'ATTACHMENTS'
    CONFIGURATIONS = 'CONFIGURATIONS'
    SETTINGS = 'SETTINGS'
    STATISTICS = 'STATISTICS'
    TAGS = 'TAGS'


class ClusterFieldList(RootModel[List[ClusterField]]):
    root: List[ClusterField]


class ClusterNotFoundException(RootModel[Any]):
    root: Any


class ClusterSettingName(Enum):
    containerInsights = 'containerInsights'


class Compatibility(Enum):
    EC2 = 'EC2'
    FARGATE = 'FARGATE'
    EXTERNAL = 'EXTERNAL'


class CompatibilityList(RootModel[List[Compatibility]]):
    root: List[Compatibility]


class Connectivity(Enum):
    CONNECTED = 'CONNECTED'
    DISCONNECTED = 'DISCONNECTED'


class ContainerCondition(Enum):
    START = 'START'
    COMPLETE = 'COMPLETE'
    SUCCESS = 'SUCCESS'
    HEALTHY = 'HEALTHY'


class ContainerInstanceField(Enum):
    TAGS = 'TAGS'
    CONTAINER_INSTANCE_HEALTH = 'CONTAINER_INSTANCE_HEALTH'


class ContainerInstanceFieldList(RootModel[List[ContainerInstanceField]]):
    root: List[ContainerInstanceField]


class ContainerInstanceStatus(Enum):
    ACTIVE = 'ACTIVE'
    DRAINING = 'DRAINING'
    REGISTERING = 'REGISTERING'
    DEREGISTERING = 'DEREGISTERING'
    REGISTRATION_FAILED = 'REGISTRATION_FAILED'


class DeploymentCircuitBreaker(BaseModel):
    enable: Boolean
    rollback: Boolean


class DeploymentControllerType(Enum):
    ECS = 'ECS'
    CODE_DEPLOY = 'CODE_DEPLOY'
    EXTERNAL = 'EXTERNAL'


class DeploymentRolloutState(Enum):
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'
    IN_PROGRESS = 'IN_PROGRESS'


class DesiredStatus(Enum):
    RUNNING = 'RUNNING'
    PENDING = 'PENDING'
    STOPPED = 'STOPPED'


class DeviceCgroupPermission(Enum):
    read = 'read'
    write = 'write'
    mknod = 'mknod'


class DeviceCgroupPermissions(RootModel[List[DeviceCgroupPermission]]):
    root: List[DeviceCgroupPermission]


class Double(RootModel[float]):
    root: float


class EFSAuthorizationConfigIAM(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class EFSTransitEncryption(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class EnvironmentFileType(Enum):
    s3 = 's3'


class ExecuteCommandLogging(Enum):
    NONE = 'NONE'
    DEFAULT = 'DEFAULT'
    OVERRIDE = 'OVERRIDE'


class FirelensConfigurationType(Enum):
    fluentd = 'fluentd'
    fluentbit = 'fluentbit'


class HealthStatus(Enum):
    HEALTHY = 'HEALTHY'
    UNHEALTHY = 'UNHEALTHY'
    UNKNOWN = 'UNKNOWN'


class InstanceHealthCheckState(Enum):
    OK = 'OK'
    IMPAIRED = 'IMPAIRED'
    INSUFFICIENT_DATA = 'INSUFFICIENT_DATA'
    INITIALIZING = 'INITIALIZING'


class InstanceHealthCheckType(Enum):
    CONTAINER_RUNTIME = 'CONTAINER_RUNTIME'


class Integer(RootModel[int]):
    root: int


class InvalidParameterException(RootModel[Any]):
    root: Any


class IpcMode(Enum):
    host = 'host'
    task = 'task'
    none = 'none'


class LaunchType(Enum):
    EC2 = 'EC2'
    FARGATE = 'FARGATE'
    EXTERNAL = 'EXTERNAL'


class LimitExceededException(RootModel[Any]):
    root: Any


class LogDriver(Enum):
    json_file = 'json-file'
    syslog = 'syslog'
    journald = 'journald'
    gelf = 'gelf'
    fluentd = 'fluentd'
    awslogs = 'awslogs'
    splunk = 'splunk'
    awsfirelens = 'awsfirelens'


class Long(RootModel[int]):
    root: int


class ManagedAgentName(Enum):
    ExecuteCommandAgent = 'ExecuteCommandAgent'


class ManagedScalingInstanceWarmupPeriod(RootModel[conint(ge=0, le=10000)]):
    root: conint(ge=0, le=10000)


class ManagedScalingStatus(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class ManagedScalingStepSize(RootModel[conint(ge=1, le=10000)]):
    root: conint(ge=1, le=10000)


class ManagedScalingTargetCapacity(RootModel[conint(ge=1, le=100)]):
    root: conint(ge=1, le=100)


class ManagedTerminationProtection(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class MissingVersionException(RootModel[Any]):
    root: Any


class NamespaceNotFoundException(RootModel[Any]):
    root: Any


class NetworkMode(Enum):
    bridge = 'bridge'
    host = 'host'
    awsvpc = 'awsvpc'
    none = 'none'


class NoUpdateAvailableException(RootModel[Any]):
    root: Any


class OSFamily(Enum):
    WINDOWS_SERVER_2019_FULL = 'WINDOWS_SERVER_2019_FULL'
    WINDOWS_SERVER_2019_CORE = 'WINDOWS_SERVER_2019_CORE'
    WINDOWS_SERVER_2016_FULL = 'WINDOWS_SERVER_2016_FULL'
    WINDOWS_SERVER_2004_CORE = 'WINDOWS_SERVER_2004_CORE'
    WINDOWS_SERVER_2022_CORE = 'WINDOWS_SERVER_2022_CORE'
    WINDOWS_SERVER_2022_FULL = 'WINDOWS_SERVER_2022_FULL'
    WINDOWS_SERVER_20H2_CORE = 'WINDOWS_SERVER_20H2_CORE'
    LINUX = 'LINUX'


class PidMode(Enum):
    host = 'host'
    task = 'task'


class PlacementConstraintType(Enum):
    distinctInstance = 'distinctInstance'
    memberOf = 'memberOf'


class PlacementStrategyType(Enum):
    random = 'random'
    spread = 'spread'
    binpack = 'binpack'


class PlatformDeviceType(Enum):
    GPU = 'GPU'


class PlatformTaskDefinitionIncompatibilityException(RootModel[Any]):
    root: Any


class PlatformUnknownException(RootModel[Any]):
    root: Any


class PortNumber(RootModel[conint(ge=0, le=65535)]):
    root: conint(ge=0, le=65535)


class PropagateTags(Enum):
    TASK_DEFINITION = 'TASK_DEFINITION'
    SERVICE = 'SERVICE'
    NONE = 'NONE'


class ProxyConfigurationType(Enum):
    APPMESH = 'APPMESH'


class ResourceInUseException(RootModel[Any]):
    root: Any


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class ResourceType(Enum):
    GPU = 'GPU'
    InferenceAccelerator = 'InferenceAccelerator'


class RuntimePlatform(BaseModel):
    cpuArchitecture: Optional[CPUArchitecture] = None
    operatingSystemFamily: Optional[OSFamily] = None


class ScaleUnit(Enum):
    PERCENT = 'PERCENT'


class SchedulingStrategy(Enum):
    REPLICA = 'REPLICA'
    DAEMON = 'DAEMON'


class Scope(Enum):
    task = 'task'
    shared = 'shared'


class SensitiveString(RootModel[SecretStr]):
    root: SecretStr


class ServerException(RootModel[Any]):
    root: Any


class ServiceField(Enum):
    TAGS = 'TAGS'


class ServiceFieldList(RootModel[List[ServiceField]]):
    root: List[ServiceField]


class ServiceNotActiveException(RootModel[Any]):
    root: Any


class ServiceNotFoundException(RootModel[Any]):
    root: Any


class SettingName(Enum):
    serviceLongArnFormat = 'serviceLongArnFormat'
    taskLongArnFormat = 'taskLongArnFormat'
    containerInstanceLongArnFormat = 'containerInstanceLongArnFormat'
    awsvpcTrunking = 'awsvpcTrunking'
    containerInsights = 'containerInsights'
    fargateFIPSMode = 'fargateFIPSMode'
    tagResourceAuthorization = 'tagResourceAuthorization'


class SortOrder(Enum):
    ASC = 'ASC'
    DESC = 'DESC'


class StabilityStatus(Enum):
    STEADY_STATE = 'STEADY_STATE'
    STABILIZING = 'STABILIZING'


class String(RootModel[str]):
    root: str


class StringList(RootModel[List[String]]):
    root: List[String]


class StringMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class SubmitAttachmentStateChangesResponse(BaseModel):
    acknowledgment: Optional[String] = None


class SubmitContainerStateChangeResponse(BaseModel):
    acknowledgment: Optional[String] = None


class SubmitTaskStateChangeResponse(BaseModel):
    acknowledgment: Optional[String] = None


class SystemControl(BaseModel):
    namespace: Optional[String] = None
    value: Optional[String] = None


class SystemControls(RootModel[List[SystemControl]]):
    root: List[SystemControl]


class TagKey(
    RootModel[
        constr(pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=1, max_length=128)
    ]
):
    root: constr(
        pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=1, max_length=128
    )


class TagKeys(RootModel[List[TagKey]]):
    root: List[TagKey]


class TagResourceResponse(BaseModel):
    pass


class TagValue(
    RootModel[
        constr(pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=0, max_length=256)
    ]
):
    root: constr(
        pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=0, max_length=256
    )


class TargetNotConnectedException(RootModel[Any]):
    root: Any


class TargetNotFoundException(RootModel[Any]):
    root: Any


class TargetType(Enum):
    container_instance = 'container-instance'


class TaskDefinitionFamilyStatus(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'
    ALL = 'ALL'


class TaskDefinitionField(Enum):
    TAGS = 'TAGS'


class TaskDefinitionFieldList(RootModel[List[TaskDefinitionField]]):
    root: List[TaskDefinitionField]


class TaskDefinitionPlacementConstraintType(Enum):
    memberOf = 'memberOf'


class TaskDefinitionStatus(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'
    DELETE_IN_PROGRESS = 'DELETE_IN_PROGRESS'


class TaskField(Enum):
    TAGS = 'TAGS'


class TaskFieldList(RootModel[List[TaskField]]):
    root: List[TaskField]


class TaskSetField(Enum):
    TAGS = 'TAGS'


class TaskSetFieldList(RootModel[List[TaskSetField]]):
    root: List[TaskSetField]


class TaskSetNotFoundException(RootModel[Any]):
    root: Any


class TaskStopCode(Enum):
    TaskFailedToStart = 'TaskFailedToStart'
    EssentialContainerExited = 'EssentialContainerExited'
    UserInitiated = 'UserInitiated'
    ServiceSchedulerInitiated = 'ServiceSchedulerInitiated'
    SpotInterruption = 'SpotInterruption'
    TerminationNotice = 'TerminationNotice'


class Timestamp(RootModel[datetime]):
    root: datetime


class Tmpfs(BaseModel):
    containerPath: String
    mountOptions: Optional[StringList] = None
    size: Integer


class TmpfsList(RootModel[List[Tmpfs]]):
    root: List[Tmpfs]


class TransportProtocol(Enum):
    tcp = 'tcp'
    udp = 'udp'


class UlimitName(Enum):
    core = 'core'
    cpu = 'cpu'
    data = 'data'
    fsize = 'fsize'
    locks = 'locks'
    memlock = 'memlock'
    msgqueue = 'msgqueue'
    nice = 'nice'
    nofile = 'nofile'
    nproc = 'nproc'
    rss = 'rss'
    rtprio = 'rtprio'
    rttime = 'rttime'
    sigpending = 'sigpending'
    stack = 'stack'


class UnsupportedFeatureException(RootModel[Any]):
    root: Any


class UntagResourceRequest(BaseModel):
    resourceArn: String
    tagKeys: TagKeys


class UntagResourceResponse(BaseModel):
    pass


class UpdateContainerAgentRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstance: String


class UpdateContainerInstancesStateRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstances: StringList
    status: ContainerInstanceStatus


class UpdateInProgressException(RootModel[Any]):
    root: Any


class UpdateServicePrimaryTaskSetRequest(BaseModel):
    cluster: String
    primaryTaskSet: String
    service: String


class UpdateTaskProtectionRequest(BaseModel):
    cluster: String
    expiresInMinutes: Optional[BoxedInteger] = None
    protectionEnabled: Boolean
    tasks: StringList


class VersionInfo(BaseModel):
    agentHash: Optional[String] = None
    agentVersion: Optional[String] = None
    dockerVersion: Optional[String] = None


class VolumeFrom(BaseModel):
    readOnly: Optional[BoxedBoolean] = None
    sourceContainer: Optional[String] = None


class VolumeFromList(RootModel[List[VolumeFrom]]):
    root: List[VolumeFrom]


class XAmzTarget(Enum):
    AmazonEC2ContainerServiceV20141113_CreateCapacityProvider = (
        'AmazonEC2ContainerServiceV20141113.CreateCapacityProvider'
    )


class XAmzTarget1(Enum):
    AmazonEC2ContainerServiceV20141113_CreateCluster = (
        'AmazonEC2ContainerServiceV20141113.CreateCluster'
    )


class XAmzTarget2(Enum):
    AmazonEC2ContainerServiceV20141113_CreateService = (
        'AmazonEC2ContainerServiceV20141113.CreateService'
    )


class XAmzTarget3(Enum):
    AmazonEC2ContainerServiceV20141113_CreateTaskSet = (
        'AmazonEC2ContainerServiceV20141113.CreateTaskSet'
    )


class XAmzTarget4(Enum):
    AmazonEC2ContainerServiceV20141113_DeleteAccountSetting = (
        'AmazonEC2ContainerServiceV20141113.DeleteAccountSetting'
    )


class XAmzTarget5(Enum):
    AmazonEC2ContainerServiceV20141113_DeleteAttributes = (
        'AmazonEC2ContainerServiceV20141113.DeleteAttributes'
    )


class XAmzTarget6(Enum):
    AmazonEC2ContainerServiceV20141113_DeleteCapacityProvider = (
        'AmazonEC2ContainerServiceV20141113.DeleteCapacityProvider'
    )


class XAmzTarget7(Enum):
    AmazonEC2ContainerServiceV20141113_DeleteCluster = (
        'AmazonEC2ContainerServiceV20141113.DeleteCluster'
    )


class XAmzTarget8(Enum):
    AmazonEC2ContainerServiceV20141113_DeleteService = (
        'AmazonEC2ContainerServiceV20141113.DeleteService'
    )


class XAmzTarget9(Enum):
    AmazonEC2ContainerServiceV20141113_DeleteTaskDefinitions = (
        'AmazonEC2ContainerServiceV20141113.DeleteTaskDefinitions'
    )


class XAmzTarget10(Enum):
    AmazonEC2ContainerServiceV20141113_DeleteTaskSet = (
        'AmazonEC2ContainerServiceV20141113.DeleteTaskSet'
    )


class XAmzTarget11(Enum):
    AmazonEC2ContainerServiceV20141113_DeregisterContainerInstance = (
        'AmazonEC2ContainerServiceV20141113.DeregisterContainerInstance'
    )


class XAmzTarget12(Enum):
    AmazonEC2ContainerServiceV20141113_DeregisterTaskDefinition = (
        'AmazonEC2ContainerServiceV20141113.DeregisterTaskDefinition'
    )


class XAmzTarget13(Enum):
    AmazonEC2ContainerServiceV20141113_DescribeCapacityProviders = (
        'AmazonEC2ContainerServiceV20141113.DescribeCapacityProviders'
    )


class XAmzTarget14(Enum):
    AmazonEC2ContainerServiceV20141113_DescribeClusters = (
        'AmazonEC2ContainerServiceV20141113.DescribeClusters'
    )


class XAmzTarget15(Enum):
    AmazonEC2ContainerServiceV20141113_DescribeContainerInstances = (
        'AmazonEC2ContainerServiceV20141113.DescribeContainerInstances'
    )


class XAmzTarget16(Enum):
    AmazonEC2ContainerServiceV20141113_DescribeServices = (
        'AmazonEC2ContainerServiceV20141113.DescribeServices'
    )


class XAmzTarget17(Enum):
    AmazonEC2ContainerServiceV20141113_DescribeTaskDefinition = (
        'AmazonEC2ContainerServiceV20141113.DescribeTaskDefinition'
    )


class XAmzTarget18(Enum):
    AmazonEC2ContainerServiceV20141113_DescribeTaskSets = (
        'AmazonEC2ContainerServiceV20141113.DescribeTaskSets'
    )


class XAmzTarget19(Enum):
    AmazonEC2ContainerServiceV20141113_DescribeTasks = (
        'AmazonEC2ContainerServiceV20141113.DescribeTasks'
    )


class XAmzTarget20(Enum):
    AmazonEC2ContainerServiceV20141113_DiscoverPollEndpoint = (
        'AmazonEC2ContainerServiceV20141113.DiscoverPollEndpoint'
    )


class XAmzTarget21(Enum):
    AmazonEC2ContainerServiceV20141113_ExecuteCommand = (
        'AmazonEC2ContainerServiceV20141113.ExecuteCommand'
    )


class XAmzTarget22(Enum):
    AmazonEC2ContainerServiceV20141113_GetTaskProtection = (
        'AmazonEC2ContainerServiceV20141113.GetTaskProtection'
    )


class XAmzTarget23(Enum):
    AmazonEC2ContainerServiceV20141113_ListAccountSettings = (
        'AmazonEC2ContainerServiceV20141113.ListAccountSettings'
    )


class XAmzTarget24(Enum):
    AmazonEC2ContainerServiceV20141113_ListAttributes = (
        'AmazonEC2ContainerServiceV20141113.ListAttributes'
    )


class XAmzTarget25(Enum):
    AmazonEC2ContainerServiceV20141113_ListClusters = (
        'AmazonEC2ContainerServiceV20141113.ListClusters'
    )


class XAmzTarget26(Enum):
    AmazonEC2ContainerServiceV20141113_ListContainerInstances = (
        'AmazonEC2ContainerServiceV20141113.ListContainerInstances'
    )


class XAmzTarget27(Enum):
    AmazonEC2ContainerServiceV20141113_ListServices = (
        'AmazonEC2ContainerServiceV20141113.ListServices'
    )


class XAmzTarget28(Enum):
    AmazonEC2ContainerServiceV20141113_ListServicesByNamespace = (
        'AmazonEC2ContainerServiceV20141113.ListServicesByNamespace'
    )


class XAmzTarget29(Enum):
    AmazonEC2ContainerServiceV20141113_ListTagsForResource = (
        'AmazonEC2ContainerServiceV20141113.ListTagsForResource'
    )


class XAmzTarget30(Enum):
    AmazonEC2ContainerServiceV20141113_ListTaskDefinitionFamilies = (
        'AmazonEC2ContainerServiceV20141113.ListTaskDefinitionFamilies'
    )


class XAmzTarget31(Enum):
    AmazonEC2ContainerServiceV20141113_ListTaskDefinitions = (
        'AmazonEC2ContainerServiceV20141113.ListTaskDefinitions'
    )


class XAmzTarget32(Enum):
    AmazonEC2ContainerServiceV20141113_ListTasks = (
        'AmazonEC2ContainerServiceV20141113.ListTasks'
    )


class XAmzTarget33(Enum):
    AmazonEC2ContainerServiceV20141113_PutAccountSetting = (
        'AmazonEC2ContainerServiceV20141113.PutAccountSetting'
    )


class XAmzTarget34(Enum):
    AmazonEC2ContainerServiceV20141113_PutAccountSettingDefault = (
        'AmazonEC2ContainerServiceV20141113.PutAccountSettingDefault'
    )


class XAmzTarget35(Enum):
    AmazonEC2ContainerServiceV20141113_PutAttributes = (
        'AmazonEC2ContainerServiceV20141113.PutAttributes'
    )


class XAmzTarget36(Enum):
    AmazonEC2ContainerServiceV20141113_PutClusterCapacityProviders = (
        'AmazonEC2ContainerServiceV20141113.PutClusterCapacityProviders'
    )


class XAmzTarget37(Enum):
    AmazonEC2ContainerServiceV20141113_RegisterContainerInstance = (
        'AmazonEC2ContainerServiceV20141113.RegisterContainerInstance'
    )


class XAmzTarget38(Enum):
    AmazonEC2ContainerServiceV20141113_RegisterTaskDefinition = (
        'AmazonEC2ContainerServiceV20141113.RegisterTaskDefinition'
    )


class XAmzTarget39(Enum):
    AmazonEC2ContainerServiceV20141113_RunTask = (
        'AmazonEC2ContainerServiceV20141113.RunTask'
    )


class XAmzTarget40(Enum):
    AmazonEC2ContainerServiceV20141113_StartTask = (
        'AmazonEC2ContainerServiceV20141113.StartTask'
    )


class XAmzTarget41(Enum):
    AmazonEC2ContainerServiceV20141113_StopTask = (
        'AmazonEC2ContainerServiceV20141113.StopTask'
    )


class XAmzTarget42(Enum):
    AmazonEC2ContainerServiceV20141113_SubmitAttachmentStateChanges = (
        'AmazonEC2ContainerServiceV20141113.SubmitAttachmentStateChanges'
    )


class XAmzTarget43(Enum):
    AmazonEC2ContainerServiceV20141113_SubmitContainerStateChange = (
        'AmazonEC2ContainerServiceV20141113.SubmitContainerStateChange'
    )


class XAmzTarget44(Enum):
    AmazonEC2ContainerServiceV20141113_SubmitTaskStateChange = (
        'AmazonEC2ContainerServiceV20141113.SubmitTaskStateChange'
    )


class XAmzTarget45(Enum):
    AmazonEC2ContainerServiceV20141113_TagResource = (
        'AmazonEC2ContainerServiceV20141113.TagResource'
    )


class XAmzTarget46(Enum):
    AmazonEC2ContainerServiceV20141113_UntagResource = (
        'AmazonEC2ContainerServiceV20141113.UntagResource'
    )


class XAmzTarget47(Enum):
    AmazonEC2ContainerServiceV20141113_UpdateCapacityProvider = (
        'AmazonEC2ContainerServiceV20141113.UpdateCapacityProvider'
    )


class XAmzTarget48(Enum):
    AmazonEC2ContainerServiceV20141113_UpdateCluster = (
        'AmazonEC2ContainerServiceV20141113.UpdateCluster'
    )


class XAmzTarget49(Enum):
    AmazonEC2ContainerServiceV20141113_UpdateClusterSettings = (
        'AmazonEC2ContainerServiceV20141113.UpdateClusterSettings'
    )


class XAmzTarget50(Enum):
    AmazonEC2ContainerServiceV20141113_UpdateContainerAgent = (
        'AmazonEC2ContainerServiceV20141113.UpdateContainerAgent'
    )


class XAmzTarget51(Enum):
    AmazonEC2ContainerServiceV20141113_UpdateContainerInstancesState = (
        'AmazonEC2ContainerServiceV20141113.UpdateContainerInstancesState'
    )


class XAmzTarget52(Enum):
    AmazonEC2ContainerServiceV20141113_UpdateService = (
        'AmazonEC2ContainerServiceV20141113.UpdateService'
    )


class XAmzTarget53(Enum):
    AmazonEC2ContainerServiceV20141113_UpdateServicePrimaryTaskSet = (
        'AmazonEC2ContainerServiceV20141113.UpdateServicePrimaryTaskSet'
    )


class XAmzTarget54(Enum):
    AmazonEC2ContainerServiceV20141113_UpdateTaskProtection = (
        'AmazonEC2ContainerServiceV20141113.UpdateTaskProtection'
    )


class XAmzTarget55(Enum):
    AmazonEC2ContainerServiceV20141113_UpdateTaskSet = (
        'AmazonEC2ContainerServiceV20141113.UpdateTaskSet'
    )


class AttachmentStateChange(BaseModel):
    attachmentArn: String
    status: String


class AttachmentStateChanges(RootModel[List[AttachmentStateChange]]):
    root: List[AttachmentStateChange]


class Attribute(BaseModel):
    name: String
    targetId: Optional[String] = None
    targetType: Optional[TargetType] = None
    value: Optional[String] = None


class Attributes(RootModel[List[Attribute]]):
    root: List[Attribute]


class AwsVpcConfiguration(BaseModel):
    assignPublicIp: Optional[AssignPublicIp] = None
    securityGroups: Optional[StringList] = None
    subnets: StringList


class CapacityProviderStrategyItem(BaseModel):
    base: Optional[CapacityProviderStrategyItemBase] = None
    capacityProvider: String
    weight: Optional[CapacityProviderStrategyItemWeight] = None


class ClusterServiceConnectDefaults(BaseModel):
    namespace: Optional[String] = None


class ClusterServiceConnectDefaultsRequest(BaseModel):
    namespace: String


class ClusterSetting(BaseModel):
    name: Optional[ClusterSettingName] = None
    value: Optional[String] = None


class ClusterSettings(RootModel[List[ClusterSetting]]):
    root: List[ClusterSetting]


class ContainerDependency(BaseModel):
    condition: ContainerCondition
    containerName: String


class DeleteAccountSettingRequest(BaseModel):
    name: SettingName
    principalArn: Optional[String] = None


class DeleteAttributesRequest(BaseModel):
    attributes: Attributes
    cluster: Optional[String] = None


class DeleteAttributesResponse(BaseModel):
    attributes: Optional[Attributes] = None


class DeleteCapacityProviderRequest(BaseModel):
    capacityProvider: String


class DeleteClusterRequest(BaseModel):
    cluster: String


class DeleteServiceRequest(BaseModel):
    cluster: Optional[String] = None
    force: Optional[BoxedBoolean] = None
    service: String


class DeleteTaskDefinitionsRequest(BaseModel):
    taskDefinitions: StringList


class DeleteTaskSetRequest(BaseModel):
    cluster: String
    force: Optional[BoxedBoolean] = None
    service: String
    taskSet: String


class DeploymentAlarms(BaseModel):
    alarmNames: StringList
    enable: Boolean
    rollback: Boolean


class DeploymentConfiguration(BaseModel):
    alarms: Optional[DeploymentAlarms] = None
    deploymentCircuitBreaker: Optional[DeploymentCircuitBreaker] = None
    maximumPercent: Optional[BoxedInteger] = None
    minimumHealthyPercent: Optional[BoxedInteger] = None


class DeploymentController(BaseModel):
    type: DeploymentControllerType


class DeregisterContainerInstanceRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstance: String
    force: Optional[BoxedBoolean] = None


class DeregisterTaskDefinitionRequest(BaseModel):
    taskDefinition: String


class DescribeCapacityProvidersRequest(BaseModel):
    capacityProviders: Optional[StringList] = None
    include: Optional[CapacityProviderFieldList] = None
    maxResults: Optional[BoxedInteger] = None
    nextToken: Optional[String] = None


class DescribeClustersRequest(BaseModel):
    clusters: Optional[StringList] = None
    include: Optional[ClusterFieldList] = None


class DescribeContainerInstancesRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstances: StringList
    include: Optional[ContainerInstanceFieldList] = None


class DescribeServicesRequest(BaseModel):
    cluster: Optional[String] = None
    include: Optional[ServiceFieldList] = None
    services: StringList


class DescribeTaskDefinitionRequest(BaseModel):
    include: Optional[TaskDefinitionFieldList] = None
    taskDefinition: String


class DescribeTaskSetsRequest(BaseModel):
    cluster: String
    include: Optional[TaskSetFieldList] = None
    service: String
    taskSets: Optional[StringList] = None


class DescribeTasksRequest(BaseModel):
    cluster: Optional[String] = None
    include: Optional[TaskFieldList] = None
    tasks: StringList


class Device(BaseModel):
    containerPath: Optional[String] = None
    hostPath: String
    permissions: Optional[DeviceCgroupPermissions] = None


class DevicesList(RootModel[List[Device]]):
    root: List[Device]


class DiscoverPollEndpointRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstance: Optional[String] = None


class DiscoverPollEndpointResponse(BaseModel):
    endpoint: Optional[String] = None
    serviceConnectEndpoint: Optional[String] = None
    telemetryEndpoint: Optional[String] = None


class DockerLabelsMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class DockerVolumeConfiguration(BaseModel):
    autoprovision: Optional[BoxedBoolean] = None
    driver: Optional[String] = None
    driverOpts: Optional[StringMap] = None
    labels: Optional[StringMap] = None
    scope: Optional[Scope] = None


class EFSAuthorizationConfig(BaseModel):
    accessPointId: Optional[String] = None
    iam: Optional[EFSAuthorizationConfigIAM] = None


class EFSVolumeConfiguration(BaseModel):
    authorizationConfig: Optional[EFSAuthorizationConfig] = None
    fileSystemId: String
    rootDirectory: Optional[String] = None
    transitEncryption: Optional[EFSTransitEncryption] = None
    transitEncryptionPort: Optional[BoxedInteger] = None


class EnvironmentFile(BaseModel):
    type: EnvironmentFileType
    value: String


class EnvironmentFiles(RootModel[List[EnvironmentFile]]):
    root: List[EnvironmentFile]


class EphemeralStorage(BaseModel):
    sizeInGiB: Integer


class ExecuteCommandLogConfiguration(BaseModel):
    cloudWatchEncryptionEnabled: Optional[Boolean] = None
    cloudWatchLogGroupName: Optional[String] = None
    s3BucketName: Optional[String] = None
    s3EncryptionEnabled: Optional[Boolean] = None
    s3KeyPrefix: Optional[String] = None


class ExecuteCommandRequest(BaseModel):
    cluster: Optional[String] = None
    command: String
    container: Optional[String] = None
    interactive: Boolean
    task: String


class FSxWindowsFileServerAuthorizationConfig(BaseModel):
    credentialsParameter: String
    domain: String


class FSxWindowsFileServerVolumeConfiguration(BaseModel):
    authorizationConfig: FSxWindowsFileServerAuthorizationConfig
    fileSystemId: String
    rootDirectory: String


class Failure(BaseModel):
    arn: Optional[String] = None
    detail: Optional[String] = None
    reason: Optional[String] = None


class Failures(RootModel[List[Failure]]):
    root: List[Failure]


class FirelensConfigurationOptionsMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class GetTaskProtectionRequest(BaseModel):
    cluster: String
    tasks: Optional[StringList] = None


class GpuIds(RootModel[List[String]]):
    root: List[String]


class HealthCheck(BaseModel):
    command: StringList
    interval: Optional[BoxedInteger] = None
    retries: Optional[BoxedInteger] = None
    startPeriod: Optional[BoxedInteger] = None
    timeout: Optional[BoxedInteger] = None


class HostEntry(BaseModel):
    hostname: String
    ipAddress: String


class HostEntryList(RootModel[List[HostEntry]]):
    root: List[HostEntry]


class HostVolumeProperties(BaseModel):
    sourcePath: Optional[String] = None


class InferenceAccelerator(BaseModel):
    deviceName: String
    deviceType: String


class InferenceAcceleratorOverride(BaseModel):
    deviceName: Optional[String] = None
    deviceType: Optional[String] = None


class InferenceAcceleratorOverrides(RootModel[List[InferenceAcceleratorOverride]]):
    root: List[InferenceAcceleratorOverride]


class InferenceAccelerators(RootModel[List[InferenceAccelerator]]):
    root: List[InferenceAccelerator]


class InstanceHealthCheckResult(BaseModel):
    lastStatusChange: Optional[Timestamp] = None
    lastUpdated: Optional[Timestamp] = None
    status: Optional[InstanceHealthCheckState] = None
    type: Optional[InstanceHealthCheckType] = None


class InstanceHealthCheckResultList(RootModel[List[InstanceHealthCheckResult]]):
    root: List[InstanceHealthCheckResult]


class KernelCapabilities(BaseModel):
    add: Optional[StringList] = None
    drop: Optional[StringList] = None


class KeyValuePair(BaseModel):
    name: Optional[String] = None
    value: Optional[String] = None


class LinuxParameters(BaseModel):
    capabilities: Optional[KernelCapabilities] = None
    devices: Optional[DevicesList] = None
    initProcessEnabled: Optional[BoxedBoolean] = None
    maxSwap: Optional[BoxedInteger] = None
    sharedMemorySize: Optional[BoxedInteger] = None
    swappiness: Optional[BoxedInteger] = None
    tmpfs: Optional[TmpfsList] = None


class ListAccountSettingsRequest(BaseModel):
    effectiveSettings: Optional[Boolean] = None
    maxResults: Optional[Integer] = None
    name: Optional[SettingName] = None
    nextToken: Optional[String] = None
    principalArn: Optional[String] = None
    value: Optional[String] = None


class ListAttributesRequest(BaseModel):
    attributeName: Optional[String] = None
    attributeValue: Optional[String] = None
    cluster: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None
    nextToken: Optional[String] = None
    targetType: TargetType


class ListAttributesResponse(BaseModel):
    attributes: Optional[Attributes] = None
    nextToken: Optional[String] = None


class ListClustersRequest(BaseModel):
    maxResults: Optional[BoxedInteger] = None
    nextToken: Optional[String] = None


class ListClustersResponse(BaseModel):
    clusterArns: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListContainerInstancesRequest(BaseModel):
    cluster: Optional[String] = None
    filter: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None
    nextToken: Optional[String] = None
    status: Optional[ContainerInstanceStatus] = None


class ListContainerInstancesResponse(BaseModel):
    containerInstanceArns: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListServicesByNamespaceRequest(BaseModel):
    maxResults: Optional[BoxedInteger] = None
    namespace: String
    nextToken: Optional[String] = None


class ListServicesByNamespaceResponse(BaseModel):
    nextToken: Optional[String] = None
    serviceArns: Optional[StringList] = None


class ListServicesRequest(BaseModel):
    cluster: Optional[String] = None
    launchType: Optional[LaunchType] = None
    maxResults: Optional[BoxedInteger] = None
    nextToken: Optional[String] = None
    schedulingStrategy: Optional[SchedulingStrategy] = None


class ListServicesResponse(BaseModel):
    nextToken: Optional[String] = None
    serviceArns: Optional[StringList] = None


class ListTagsForResourceRequest(BaseModel):
    resourceArn: String


class ListTaskDefinitionFamiliesRequest(BaseModel):
    familyPrefix: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None
    nextToken: Optional[String] = None
    status: Optional[TaskDefinitionFamilyStatus] = None


class ListTaskDefinitionFamiliesResponse(BaseModel):
    families: Optional[StringList] = None
    nextToken: Optional[String] = None


class ListTaskDefinitionsRequest(BaseModel):
    familyPrefix: Optional[String] = None
    maxResults: Optional[BoxedInteger] = None
    nextToken: Optional[String] = None
    sort: Optional[SortOrder] = None
    status: Optional[TaskDefinitionStatus] = None


class ListTaskDefinitionsResponse(BaseModel):
    nextToken: Optional[String] = None
    taskDefinitionArns: Optional[StringList] = None


class ListTasksRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstance: Optional[String] = None
    desiredStatus: Optional[DesiredStatus] = None
    family: Optional[String] = None
    launchType: Optional[LaunchType] = None
    maxResults: Optional[BoxedInteger] = None
    nextToken: Optional[String] = None
    serviceName: Optional[String] = None
    startedBy: Optional[String] = None


class ListTasksResponse(BaseModel):
    nextToken: Optional[String] = None
    taskArns: Optional[StringList] = None


class LoadBalancer(BaseModel):
    containerName: Optional[String] = None
    containerPort: Optional[BoxedInteger] = None
    loadBalancerName: Optional[String] = None
    targetGroupArn: Optional[String] = None


class LoadBalancers(RootModel[List[LoadBalancer]]):
    root: List[LoadBalancer]


class LogConfigurationOptionsMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class ManagedAgent(BaseModel):
    lastStartedAt: Optional[Timestamp] = None
    lastStatus: Optional[String] = None
    name: Optional[ManagedAgentName] = None
    reason: Optional[String] = None


class ManagedAgentStateChange(BaseModel):
    containerName: String
    managedAgentName: ManagedAgentName
    reason: Optional[String] = None
    status: String


class ManagedAgentStateChanges(RootModel[List[ManagedAgentStateChange]]):
    root: List[ManagedAgentStateChange]


class ManagedAgents(RootModel[List[ManagedAgent]]):
    root: List[ManagedAgent]


class ManagedScaling(BaseModel):
    instanceWarmupPeriod: Optional[ManagedScalingInstanceWarmupPeriod] = None
    maximumScalingStepSize: Optional[ManagedScalingStepSize] = None
    minimumScalingStepSize: Optional[ManagedScalingStepSize] = None
    status: Optional[ManagedScalingStatus] = None
    targetCapacity: Optional[ManagedScalingTargetCapacity] = None


class MountPoint(BaseModel):
    containerPath: Optional[String] = None
    readOnly: Optional[BoxedBoolean] = None
    sourceVolume: Optional[String] = None


class MountPointList(RootModel[List[MountPoint]]):
    root: List[MountPoint]


class NetworkBinding(BaseModel):
    bindIP: Optional[String] = None
    containerPort: Optional[BoxedInteger] = None
    containerPortRange: Optional[String] = None
    hostPort: Optional[BoxedInteger] = None
    hostPortRange: Optional[String] = None
    protocol: Optional[TransportProtocol] = None


class NetworkBindings(RootModel[List[NetworkBinding]]):
    root: List[NetworkBinding]


class NetworkConfiguration(BaseModel):
    awsvpcConfiguration: Optional[AwsVpcConfiguration] = None


class NetworkInterface(BaseModel):
    attachmentId: Optional[String] = None
    ipv6Address: Optional[String] = None
    privateIpv4Address: Optional[String] = None


class NetworkInterfaces(RootModel[List[NetworkInterface]]):
    root: List[NetworkInterface]


class PlacementConstraint(BaseModel):
    expression: Optional[String] = None
    type: Optional[PlacementConstraintType] = None


class PlacementConstraints(RootModel[List[PlacementConstraint]]):
    root: List[PlacementConstraint]


class PlacementStrategy(BaseModel):
    field: Optional[String] = None
    type: Optional[PlacementStrategyType] = None


class PlatformDevice(BaseModel):
    id: String
    type: PlatformDeviceType


class PlatformDevices(RootModel[List[PlatformDevice]]):
    root: List[PlatformDevice]


class PortMapping(BaseModel):
    appProtocol: Optional[ApplicationProtocol] = None
    containerPort: Optional[BoxedInteger] = None
    containerPortRange: Optional[String] = None
    hostPort: Optional[BoxedInteger] = None
    name: Optional[String] = None
    protocol: Optional[TransportProtocol] = None


class PortMappingList(RootModel[List[PortMapping]]):
    root: List[PortMapping]


class ProtectedTask(BaseModel):
    expirationDate: Optional[Timestamp] = None
    protectionEnabled: Optional[Boolean] = None
    taskArn: Optional[String] = None


class ProtectedTasks(RootModel[List[ProtectedTask]]):
    root: List[ProtectedTask]


class ProxyConfiguration(BaseModel):
    containerName: String
    properties: Optional[Any] = Field(
        None,
        description='<p>The set of network configuration parameters to provide the Container Network Interface (CNI) plugin, specified as key-value pairs.</p> <ul> <li> <p> <code>IgnoredUID</code> - (Required) The user ID (UID) of the proxy container as defined by the <code>user</code> parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If <code>IgnoredGID</code> is specified, this field can be empty.</p> </li> <li> <p> <code>IgnoredGID</code> - (Required) The group ID (GID) of the proxy container as defined by the <code>user</code> parameter in a container definition. This is used to ensure the proxy ignores its own traffic. If <code>IgnoredUID</code> is specified, this field can be empty.</p> </li> <li> <p> <code>AppPorts</code> - (Required) The list of ports that the application uses. Network traffic to these ports is forwarded to the <code>ProxyIngressPort</code> and <code>ProxyEgressPort</code>.</p> </li> <li> <p> <code>ProxyIngressPort</code> - (Required) Specifies the port that incoming traffic to the <code>AppPorts</code> is directed to.</p> </li> <li> <p> <code>ProxyEgressPort</code> - (Required) Specifies the port that outgoing traffic from the <code>AppPorts</code> is directed to.</p> </li> <li> <p> <code>EgressIgnoredPorts</code> - (Required) The egress traffic going to the specified ports is ignored and not redirected to the <code>ProxyEgressPort</code>. It can be an empty list.</p> </li> <li> <p> <code>EgressIgnoredIPs</code> - (Required) The egress traffic going to the specified IP addresses is ignored and not redirected to the <code>ProxyEgressPort</code>. It can be an empty list.</p> </li> </ul>',
    )
    type: Optional[ProxyConfigurationType] = None


class ProxyConfigurationProperties(RootModel[List[KeyValuePair]]):
    root: List[KeyValuePair]


class PutAccountSettingDefaultRequest(BaseModel):
    name: SettingName
    value: String


class PutAccountSettingRequest(BaseModel):
    name: SettingName
    principalArn: Optional[String] = None
    value: String


class PutAttributesRequest(BaseModel):
    attributes: Attributes
    cluster: Optional[String] = None


class PutAttributesResponse(BaseModel):
    attributes: Optional[Attributes] = None


class RepositoryCredentials(BaseModel):
    credentialsParameter: String


class RequiresAttributes(RootModel[List[Attribute]]):
    root: List[Attribute]


class Resource(BaseModel):
    doubleValue: Optional[Double] = None
    integerValue: Optional[Integer] = None
    longValue: Optional[Long] = None
    name: Optional[String] = None
    stringSetValue: Optional[StringList] = None
    type: Optional[String] = None


class ResourceRequirement(BaseModel):
    type: ResourceType
    value: String


class ResourceRequirements(RootModel[List[ResourceRequirement]]):
    root: List[ResourceRequirement]


class Resources(RootModel[List[Resource]]):
    root: List[Resource]


class Scale(BaseModel):
    unit: Optional[ScaleUnit] = None
    value: Optional[Double] = None


class Secret(BaseModel):
    name: String
    valueFrom: String


class SecretList(RootModel[List[Secret]]):
    root: List[Secret]


class ServiceConnectClientAlias(BaseModel):
    dnsName: Optional[String] = None
    port: PortNumber


class ServiceConnectClientAliasList(RootModel[List[ServiceConnectClientAlias]]):
    root: List[ServiceConnectClientAlias]


class ServiceConnectService(BaseModel):
    clientAliases: Optional[ServiceConnectClientAliasList] = None
    discoveryName: Optional[String] = None
    ingressPortOverride: Optional[PortNumber] = None
    portName: String


class ServiceConnectServiceList(RootModel[List[ServiceConnectService]]):
    root: List[ServiceConnectService]


class ServiceConnectServiceResource(BaseModel):
    discoveryArn: Optional[String] = None
    discoveryName: Optional[String] = None


class ServiceConnectServiceResourceList(RootModel[List[ServiceConnectServiceResource]]):
    root: List[ServiceConnectServiceResource]


class ServiceEvent(BaseModel):
    createdAt: Optional[Timestamp] = None
    id: Optional[String] = None
    message: Optional[String] = None


class ServiceEvents(RootModel[List[ServiceEvent]]):
    root: List[ServiceEvent]


class ServiceRegistry(BaseModel):
    containerName: Optional[String] = None
    containerPort: Optional[BoxedInteger] = None
    port: Optional[BoxedInteger] = None
    registryArn: Optional[String] = None


class Session(BaseModel):
    sessionId: Optional[String] = None
    streamUrl: Optional[String] = None
    tokenValue: Optional[SensitiveString] = None


class Setting(BaseModel):
    name: Optional[SettingName] = None
    principalArn: Optional[String] = None
    value: Optional[String] = None


class Settings(RootModel[List[Setting]]):
    root: List[Setting]


class Statistics(RootModel[List[KeyValuePair]]):
    root: List[KeyValuePair]


class StopTaskRequest(BaseModel):
    cluster: Optional[String] = None
    reason: Optional[String] = None
    task: String


class SubmitAttachmentStateChangesRequest(BaseModel):
    attachments: AttachmentStateChanges
    cluster: Optional[String] = None


class SubmitContainerStateChangeRequest(BaseModel):
    cluster: Optional[String] = None
    containerName: Optional[String] = None
    exitCode: Optional[BoxedInteger] = None
    networkBindings: Optional[NetworkBindings] = None
    reason: Optional[String] = None
    runtimeId: Optional[String] = None
    status: Optional[String] = None
    task: Optional[String] = None


class Tag(BaseModel):
    key: Optional[TagKey] = None
    value: Optional[TagValue] = None


class Tags(RootModel[List[Tag]]):
    root: List[Tag] = Field(..., max_length=50, min_length=0)


class TaskDefinitionPlacementConstraint(BaseModel):
    expression: Optional[String] = None
    type: Optional[TaskDefinitionPlacementConstraintType] = None


class TaskDefinitionPlacementConstraints(
    RootModel[List[TaskDefinitionPlacementConstraint]]
):
    root: List[TaskDefinitionPlacementConstraint]


class Ulimit(BaseModel):
    hardLimit: Integer
    name: UlimitName
    softLimit: Integer


class UlimitList(RootModel[List[Ulimit]]):
    root: List[Ulimit]


class UpdateClusterSettingsRequest(BaseModel):
    cluster: String
    settings: ClusterSettings


class UpdateTaskProtectionResponse(BaseModel):
    failures: Optional[Failures] = None
    protectedTasks: Optional[ProtectedTasks] = None


class UpdateTaskSetRequest(BaseModel):
    cluster: String
    scale: Scale
    service: String
    taskSet: String


class Volume(BaseModel):
    dockerVolumeConfiguration: Optional[DockerVolumeConfiguration] = None
    efsVolumeConfiguration: Optional[EFSVolumeConfiguration] = None
    fsxWindowsFileServerVolumeConfiguration: Optional[
        FSxWindowsFileServerVolumeConfiguration
    ] = None
    host: Optional[HostVolumeProperties] = None
    name: Optional[String] = None


class VolumeList(RootModel[List[Volume]]):
    root: List[Volume]


class AttachmentDetails(RootModel[List[KeyValuePair]]):
    root: List[KeyValuePair]


class AutoScalingGroupProvider(BaseModel):
    autoScalingGroupArn: String
    managedScaling: Optional[ManagedScaling] = None
    managedTerminationProtection: Optional[ManagedTerminationProtection] = None


class AutoScalingGroupProviderUpdate(BaseModel):
    managedScaling: Optional[ManagedScaling] = None
    managedTerminationProtection: Optional[ManagedTerminationProtection] = None


class CapacityProvider(BaseModel):
    autoScalingGroupProvider: Optional[AutoScalingGroupProvider] = None
    capacityProviderArn: Optional[String] = None
    name: Optional[String] = None
    status: Optional[CapacityProviderStatus] = None
    tags: Optional[Tags] = None
    updateStatus: Optional[CapacityProviderUpdateStatus] = None
    updateStatusReason: Optional[String] = None


class CapacityProviderStrategy(RootModel[List[CapacityProviderStrategyItem]]):
    root: List[CapacityProviderStrategyItem]


class CapacityProviders(RootModel[List[CapacityProvider]]):
    root: List[CapacityProvider]


class Container(BaseModel):
    containerArn: Optional[String] = None
    cpu: Optional[String] = None
    exitCode: Optional[BoxedInteger] = None
    gpuIds: Optional[GpuIds] = None
    healthStatus: Optional[HealthStatus] = None
    image: Optional[String] = None
    imageDigest: Optional[String] = None
    lastStatus: Optional[String] = None
    managedAgents: Optional[ManagedAgents] = None
    memory: Optional[String] = None
    memoryReservation: Optional[String] = None
    name: Optional[String] = None
    networkBindings: Optional[NetworkBindings] = None
    networkInterfaces: Optional[NetworkInterfaces] = None
    reason: Optional[String] = None
    runtimeId: Optional[String] = None
    taskArn: Optional[String] = None


class ContainerDependencies(RootModel[List[ContainerDependency]]):
    root: List[ContainerDependency]


class ContainerInstanceHealthStatus(BaseModel):
    details: Optional[InstanceHealthCheckResultList] = None
    overallStatus: Optional[InstanceHealthCheckState] = None


class ContainerStateChange(BaseModel):
    containerName: Optional[String] = None
    exitCode: Optional[BoxedInteger] = None
    imageDigest: Optional[String] = None
    networkBindings: Optional[NetworkBindings] = None
    reason: Optional[String] = None
    runtimeId: Optional[String] = None
    status: Optional[String] = None


class ContainerStateChanges(RootModel[List[ContainerStateChange]]):
    root: List[ContainerStateChange]


class Containers(RootModel[List[Container]]):
    root: List[Container]


class CreateCapacityProviderRequest(BaseModel):
    autoScalingGroupProvider: AutoScalingGroupProvider
    name: String
    tags: Optional[Tags] = None


class CreateCapacityProviderResponse(BaseModel):
    capacityProvider: Optional[CapacityProvider] = None


class DeleteAccountSettingResponse(BaseModel):
    setting: Optional[Setting] = None


class DeleteCapacityProviderResponse(BaseModel):
    capacityProvider: Optional[CapacityProvider] = None


class DescribeCapacityProvidersResponse(BaseModel):
    capacityProviders: Optional[CapacityProviders] = None
    failures: Optional[Failures] = None
    nextToken: Optional[String] = None


class EnvironmentVariables(RootModel[List[KeyValuePair]]):
    root: List[KeyValuePair]


class ExecuteCommandConfiguration(BaseModel):
    kmsKeyId: Optional[String] = None
    logConfiguration: Optional[ExecuteCommandLogConfiguration] = None
    logging: Optional[ExecuteCommandLogging] = None


class ExecuteCommandResponse(BaseModel):
    clusterArn: Optional[String] = None
    containerArn: Optional[String] = None
    containerName: Optional[String] = None
    interactive: Optional[Boolean] = None
    session: Optional[Session] = None
    taskArn: Optional[String] = None


class FirelensConfiguration(BaseModel):
    options: Optional[FirelensConfigurationOptionsMap] = None
    type: FirelensConfigurationType


class GetTaskProtectionResponse(BaseModel):
    failures: Optional[Failures] = None
    protectedTasks: Optional[ProtectedTasks] = None


class ListAccountSettingsResponse(BaseModel):
    nextToken: Optional[String] = None
    settings: Optional[Settings] = None


class ListTagsForResourceResponse(BaseModel):
    tags: Optional[Tags] = None


class LogConfiguration(BaseModel):
    logDriver: LogDriver
    options: Optional[LogConfigurationOptionsMap] = None
    secretOptions: Optional[SecretList] = None


class PlacementStrategies(RootModel[List[PlacementStrategy]]):
    root: List[PlacementStrategy]


class PutAccountSettingDefaultResponse(BaseModel):
    setting: Optional[Setting] = None


class PutAccountSettingResponse(BaseModel):
    setting: Optional[Setting] = None


class PutClusterCapacityProvidersRequest(BaseModel):
    capacityProviders: StringList
    cluster: String
    defaultCapacityProviderStrategy: CapacityProviderStrategy


class RegisterContainerInstanceRequest(BaseModel):
    attributes: Optional[Attributes] = None
    cluster: Optional[String] = None
    containerInstanceArn: Optional[String] = None
    instanceIdentityDocument: Optional[String] = None
    instanceIdentityDocumentSignature: Optional[String] = None
    platformDevices: Optional[PlatformDevices] = None
    tags: Optional[Tags] = None
    totalResources: Optional[Resources] = None
    versionInfo: Optional[VersionInfo] = None


class ServiceConnectConfiguration(BaseModel):
    enabled: Boolean
    logConfiguration: Optional[LogConfiguration] = None
    namespace: Optional[String] = None
    services: Optional[ServiceConnectServiceList] = None


class ServiceRegistries(RootModel[List[ServiceRegistry]]):
    root: List[ServiceRegistry]


class SubmitTaskStateChangeRequest(BaseModel):
    attachments: Optional[AttachmentStateChanges] = None
    cluster: Optional[String] = None
    containers: Optional[ContainerStateChanges] = None
    executionStoppedAt: Optional[Timestamp] = None
    managedAgents: Optional[ManagedAgentStateChanges] = None
    pullStartedAt: Optional[Timestamp] = None
    pullStoppedAt: Optional[Timestamp] = None
    reason: Optional[String] = None
    status: Optional[String] = None
    task: Optional[String] = None


class TagResourceRequest(BaseModel):
    resourceArn: String
    tags: Tags


class TaskSet(BaseModel):
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    clusterArn: Optional[String] = None
    computedDesiredCount: Optional[Integer] = None
    createdAt: Optional[Timestamp] = None
    externalId: Optional[String] = None
    id: Optional[String] = None
    launchType: Optional[LaunchType] = None
    loadBalancers: Optional[LoadBalancers] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    pendingCount: Optional[Integer] = None
    platformFamily: Optional[String] = None
    platformVersion: Optional[String] = None
    runningCount: Optional[Integer] = None
    scale: Optional[Scale] = None
    serviceArn: Optional[String] = None
    serviceRegistries: Optional[ServiceRegistries] = None
    stabilityStatus: Optional[StabilityStatus] = None
    stabilityStatusAt: Optional[Timestamp] = None
    startedBy: Optional[String] = None
    status: Optional[String] = None
    tags: Optional[Tags] = None
    taskDefinition: Optional[String] = None
    taskSetArn: Optional[String] = None
    updatedAt: Optional[Timestamp] = None


class TaskSets(RootModel[List[TaskSet]]):
    root: List[TaskSet]


class UpdateCapacityProviderRequest(BaseModel):
    autoScalingGroupProvider: AutoScalingGroupProviderUpdate
    name: String


class UpdateCapacityProviderResponse(BaseModel):
    capacityProvider: Optional[CapacityProvider] = None


class UpdateServicePrimaryTaskSetResponse(BaseModel):
    taskSet: Optional[TaskSet] = None


class UpdateServiceRequest(BaseModel):
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    cluster: Optional[String] = None
    deploymentConfiguration: Optional[DeploymentConfiguration] = None
    desiredCount: Optional[BoxedInteger] = None
    enableECSManagedTags: Optional[BoxedBoolean] = None
    enableExecuteCommand: Optional[BoxedBoolean] = None
    forceNewDeployment: Optional[Boolean] = None
    healthCheckGracePeriodSeconds: Optional[BoxedInteger] = None
    loadBalancers: Optional[LoadBalancers] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    placementConstraints: Optional[PlacementConstraints] = None
    placementStrategy: Optional[PlacementStrategies] = None
    platformVersion: Optional[String] = None
    propagateTags: Optional[PropagateTags] = None
    service: String
    serviceConnectConfiguration: Optional[ServiceConnectConfiguration] = None
    serviceRegistries: Optional[ServiceRegistries] = None
    taskDefinition: Optional[String] = None


class UpdateTaskSetResponse(BaseModel):
    taskSet: Optional[TaskSet] = None


class Attachment(BaseModel):
    details: Optional[AttachmentDetails] = None
    id: Optional[String] = None
    status: Optional[String] = None
    type: Optional[String] = None


class Attachments(RootModel[List[Attachment]]):
    root: List[Attachment]


class ClusterConfiguration(BaseModel):
    executeCommandConfiguration: Optional[ExecuteCommandConfiguration] = None


class ContainerDefinition(BaseModel):
    command: Optional[StringList] = None
    cpu: Optional[Integer] = None
    dependsOn: Optional[ContainerDependencies] = None
    disableNetworking: Optional[BoxedBoolean] = None
    dnsSearchDomains: Optional[StringList] = None
    dnsServers: Optional[StringList] = None
    dockerLabels: Optional[DockerLabelsMap] = None
    dockerSecurityOptions: Optional[StringList] = None
    entryPoint: Optional[StringList] = None
    environment: Optional[EnvironmentVariables] = None
    environmentFiles: Optional[EnvironmentFiles] = None
    essential: Optional[BoxedBoolean] = None
    extraHosts: Optional[HostEntryList] = None
    firelensConfiguration: Optional[FirelensConfiguration] = None
    healthCheck: Optional[HealthCheck] = None
    hostname: Optional[String] = None
    image: Optional[String] = None
    interactive: Optional[BoxedBoolean] = None
    links: Optional[StringList] = None
    linuxParameters: Optional[LinuxParameters] = None
    logConfiguration: Optional[LogConfiguration] = None
    memory: Optional[BoxedInteger] = None
    memoryReservation: Optional[BoxedInteger] = None
    mountPoints: Optional[MountPointList] = None
    name: Optional[String] = None
    portMappings: Optional[PortMappingList] = None
    privileged: Optional[BoxedBoolean] = None
    pseudoTerminal: Optional[BoxedBoolean] = None
    readonlyRootFilesystem: Optional[BoxedBoolean] = None
    repositoryCredentials: Optional[RepositoryCredentials] = None
    resourceRequirements: Optional[ResourceRequirements] = None
    secrets: Optional[SecretList] = None
    startTimeout: Optional[BoxedInteger] = None
    stopTimeout: Optional[BoxedInteger] = None
    systemControls: Optional[SystemControls] = None
    ulimits: Optional[UlimitList] = None
    user: Optional[String] = None
    volumesFrom: Optional[VolumeFromList] = None
    workingDirectory: Optional[String] = None


class ContainerDefinitions(RootModel[List[ContainerDefinition]]):
    root: List[ContainerDefinition]


class ContainerInstance(BaseModel):
    agentConnected: Optional[Boolean] = None
    agentUpdateStatus: Optional[AgentUpdateStatus] = None
    attachments: Optional[Attachments] = None
    attributes: Optional[Attributes] = None
    capacityProviderName: Optional[String] = None
    containerInstanceArn: Optional[String] = None
    ec2InstanceId: Optional[String] = None
    healthStatus: Optional[ContainerInstanceHealthStatus] = None
    pendingTasksCount: Optional[Integer] = None
    registeredAt: Optional[Timestamp] = None
    registeredResources: Optional[Resources] = None
    remainingResources: Optional[Resources] = None
    runningTasksCount: Optional[Integer] = None
    status: Optional[String] = None
    statusReason: Optional[String] = None
    tags: Optional[Tags] = None
    version: Optional[Long] = None
    versionInfo: Optional[VersionInfo] = None


class ContainerInstances(RootModel[List[ContainerInstance]]):
    root: List[ContainerInstance]


class ContainerOverride(BaseModel):
    command: Optional[StringList] = None
    cpu: Optional[BoxedInteger] = None
    environment: Optional[EnvironmentVariables] = None
    environmentFiles: Optional[EnvironmentFiles] = None
    memory: Optional[BoxedInteger] = None
    memoryReservation: Optional[BoxedInteger] = None
    name: Optional[String] = None
    resourceRequirements: Optional[ResourceRequirements] = None


class ContainerOverrides(RootModel[List[ContainerOverride]]):
    root: List[ContainerOverride]


class CreateClusterRequest(BaseModel):
    capacityProviders: Optional[StringList] = None
    clusterName: Optional[String] = None
    configuration: Optional[ClusterConfiguration] = None
    defaultCapacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    serviceConnectDefaults: Optional[ClusterServiceConnectDefaultsRequest] = None
    settings: Optional[ClusterSettings] = None
    tags: Optional[Tags] = None


class CreateServiceRequest(BaseModel):
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    clientToken: Optional[String] = None
    cluster: Optional[String] = None
    deploymentConfiguration: Optional[DeploymentConfiguration] = None
    deploymentController: Optional[DeploymentController] = None
    desiredCount: Optional[BoxedInteger] = None
    enableECSManagedTags: Optional[Boolean] = None
    enableExecuteCommand: Optional[Boolean] = None
    healthCheckGracePeriodSeconds: Optional[BoxedInteger] = None
    launchType: Optional[LaunchType] = None
    loadBalancers: Optional[LoadBalancers] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    placementConstraints: Optional[PlacementConstraints] = None
    placementStrategy: Optional[PlacementStrategies] = None
    platformVersion: Optional[String] = None
    propagateTags: Optional[PropagateTags] = None
    role: Optional[String] = None
    schedulingStrategy: Optional[SchedulingStrategy] = None
    serviceConnectConfiguration: Optional[ServiceConnectConfiguration] = None
    serviceName: String
    serviceRegistries: Optional[ServiceRegistries] = None
    tags: Optional[Tags] = None
    taskDefinition: Optional[String] = None


class CreateTaskSetRequest(BaseModel):
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    clientToken: Optional[String] = None
    cluster: String
    externalId: Optional[String] = None
    launchType: Optional[LaunchType] = None
    loadBalancers: Optional[LoadBalancers] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    platformVersion: Optional[String] = None
    scale: Optional[Scale] = None
    service: String
    serviceRegistries: Optional[ServiceRegistries] = None
    tags: Optional[Tags] = None
    taskDefinition: String


class CreateTaskSetResponse(BaseModel):
    taskSet: Optional[TaskSet] = None


class DeleteTaskSetResponse(BaseModel):
    taskSet: Optional[TaskSet] = None


class Deployment(BaseModel):
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    createdAt: Optional[Timestamp] = None
    desiredCount: Optional[Integer] = None
    failedTasks: Optional[Integer] = None
    id: Optional[String] = None
    launchType: Optional[LaunchType] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    pendingCount: Optional[Integer] = None
    platformFamily: Optional[String] = None
    platformVersion: Optional[String] = None
    rolloutState: Optional[DeploymentRolloutState] = None
    rolloutStateReason: Optional[String] = None
    runningCount: Optional[Integer] = None
    serviceConnectConfiguration: Optional[ServiceConnectConfiguration] = None
    serviceConnectResources: Optional[ServiceConnectServiceResourceList] = None
    status: Optional[String] = None
    taskDefinition: Optional[String] = None
    updatedAt: Optional[Timestamp] = None


class Deployments(RootModel[List[Deployment]]):
    root: List[Deployment]


class DeregisterContainerInstanceResponse(BaseModel):
    containerInstance: Optional[ContainerInstance] = None


class DescribeContainerInstancesResponse(BaseModel):
    containerInstances: Optional[ContainerInstances] = None
    failures: Optional[Failures] = None


class DescribeTaskSetsResponse(BaseModel):
    failures: Optional[Failures] = None
    taskSets: Optional[TaskSets] = None


class RegisterContainerInstanceResponse(BaseModel):
    containerInstance: Optional[ContainerInstance] = None


class RegisterTaskDefinitionRequest(BaseModel):
    containerDefinitions: ContainerDefinitions
    cpu: Optional[String] = None
    ephemeralStorage: Optional[EphemeralStorage] = None
    executionRoleArn: Optional[String] = None
    family: String
    inferenceAccelerators: Optional[InferenceAccelerators] = None
    ipcMode: Optional[IpcMode] = None
    memory: Optional[String] = None
    networkMode: Optional[NetworkMode] = None
    pidMode: Optional[PidMode] = None
    placementConstraints: Optional[TaskDefinitionPlacementConstraints] = None
    proxyConfiguration: Optional[ProxyConfiguration] = None
    requiresCompatibilities: Optional[CompatibilityList] = None
    runtimePlatform: Optional[RuntimePlatform] = None
    tags: Optional[Tags] = None
    taskRoleArn: Optional[String] = None
    volumes: Optional[VolumeList] = None


class Service(BaseModel):
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    clusterArn: Optional[String] = None
    createdAt: Optional[Timestamp] = None
    createdBy: Optional[String] = None
    deploymentConfiguration: Optional[DeploymentConfiguration] = None
    deploymentController: Optional[DeploymentController] = None
    deployments: Optional[Deployments] = None
    desiredCount: Optional[Integer] = None
    enableECSManagedTags: Optional[Boolean] = None
    enableExecuteCommand: Optional[Boolean] = None
    events: Optional[ServiceEvents] = None
    healthCheckGracePeriodSeconds: Optional[BoxedInteger] = None
    launchType: Optional[LaunchType] = None
    loadBalancers: Optional[LoadBalancers] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    pendingCount: Optional[Integer] = None
    placementConstraints: Optional[PlacementConstraints] = None
    placementStrategy: Optional[PlacementStrategies] = None
    platformFamily: Optional[String] = None
    platformVersion: Optional[String] = None
    propagateTags: Optional[PropagateTags] = None
    roleArn: Optional[String] = None
    runningCount: Optional[Integer] = None
    schedulingStrategy: Optional[SchedulingStrategy] = None
    serviceArn: Optional[String] = None
    serviceName: Optional[String] = None
    serviceRegistries: Optional[ServiceRegistries] = None
    status: Optional[String] = None
    tags: Optional[Tags] = None
    taskDefinition: Optional[String] = None
    taskSets: Optional[TaskSets] = None


class Services(RootModel[List[Service]]):
    root: List[Service]


class TaskDefinition(BaseModel):
    compatibilities: Optional[CompatibilityList] = None
    containerDefinitions: Optional[ContainerDefinitions] = None
    cpu: Optional[String] = None
    deregisteredAt: Optional[Timestamp] = None
    ephemeralStorage: Optional[EphemeralStorage] = None
    executionRoleArn: Optional[String] = None
    family: Optional[String] = None
    inferenceAccelerators: Optional[InferenceAccelerators] = None
    ipcMode: Optional[IpcMode] = None
    memory: Optional[String] = None
    networkMode: Optional[NetworkMode] = None
    pidMode: Optional[PidMode] = None
    placementConstraints: Optional[TaskDefinitionPlacementConstraints] = None
    proxyConfiguration: Optional[ProxyConfiguration] = None
    registeredAt: Optional[Timestamp] = None
    registeredBy: Optional[String] = None
    requiresAttributes: Optional[RequiresAttributes] = None
    requiresCompatibilities: Optional[CompatibilityList] = None
    revision: Optional[Integer] = None
    runtimePlatform: Optional[RuntimePlatform] = None
    status: Optional[TaskDefinitionStatus] = None
    taskDefinitionArn: Optional[String] = None
    taskRoleArn: Optional[String] = None
    volumes: Optional[VolumeList] = None


class TaskDefinitionList(RootModel[List[TaskDefinition]]):
    root: List[TaskDefinition]


class TaskOverride(BaseModel):
    containerOverrides: Optional[ContainerOverrides] = None
    cpu: Optional[String] = None
    ephemeralStorage: Optional[EphemeralStorage] = None
    executionRoleArn: Optional[String] = None
    inferenceAcceleratorOverrides: Optional[InferenceAcceleratorOverrides] = None
    memory: Optional[String] = None
    taskRoleArn: Optional[String] = None


class UpdateClusterRequest(BaseModel):
    cluster: String
    configuration: Optional[ClusterConfiguration] = None
    serviceConnectDefaults: Optional[ClusterServiceConnectDefaultsRequest] = None
    settings: Optional[ClusterSettings] = None


class UpdateContainerAgentResponse(BaseModel):
    containerInstance: Optional[ContainerInstance] = None


class UpdateContainerInstancesStateResponse(BaseModel):
    containerInstances: Optional[ContainerInstances] = None
    failures: Optional[Failures] = None


class UpdateServiceResponse(BaseModel):
    service: Optional[Service] = None


class Cluster(BaseModel):
    activeServicesCount: Optional[Integer] = None
    attachments: Optional[Attachments] = None
    attachmentsStatus: Optional[String] = None
    capacityProviders: Optional[StringList] = None
    clusterArn: Optional[String] = None
    clusterName: Optional[String] = None
    configuration: Optional[ClusterConfiguration] = None
    defaultCapacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    pendingTasksCount: Optional[Integer] = None
    registeredContainerInstancesCount: Optional[Integer] = None
    runningTasksCount: Optional[Integer] = None
    serviceConnectDefaults: Optional[ClusterServiceConnectDefaults] = None
    settings: Optional[ClusterSettings] = None
    statistics: Optional[Statistics] = None
    status: Optional[String] = None
    tags: Optional[Tags] = None


class Clusters(RootModel[List[Cluster]]):
    root: List[Cluster]


class CreateClusterResponse(BaseModel):
    cluster: Optional[Cluster] = None


class CreateServiceResponse(BaseModel):
    service: Optional[Service] = None


class DeleteClusterResponse(BaseModel):
    cluster: Optional[Cluster] = None


class DeleteServiceResponse(BaseModel):
    service: Optional[Service] = None


class DeleteTaskDefinitionsResponse(BaseModel):
    failures: Optional[Failures] = None
    taskDefinitions: Optional[TaskDefinitionList] = None


class DeregisterTaskDefinitionResponse(BaseModel):
    taskDefinition: Optional[TaskDefinition] = None


class DescribeClustersResponse(BaseModel):
    clusters: Optional[Clusters] = None
    failures: Optional[Failures] = None


class DescribeServicesResponse(BaseModel):
    failures: Optional[Failures] = None
    services: Optional[Services] = None


class DescribeTaskDefinitionResponse(BaseModel):
    tags: Optional[Tags] = None
    taskDefinition: Optional[TaskDefinition] = None


class PutClusterCapacityProvidersResponse(BaseModel):
    cluster: Optional[Cluster] = None


class RegisterTaskDefinitionResponse(BaseModel):
    tags: Optional[Tags] = None
    taskDefinition: Optional[TaskDefinition] = None


class RunTaskRequest(BaseModel):
    capacityProviderStrategy: Optional[CapacityProviderStrategy] = None
    cluster: Optional[String] = None
    count: Optional[BoxedInteger] = None
    enableECSManagedTags: Optional[Boolean] = None
    enableExecuteCommand: Optional[Boolean] = None
    group: Optional[String] = None
    launchType: Optional[LaunchType] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    overrides: Optional[TaskOverride] = None
    placementConstraints: Optional[PlacementConstraints] = None
    placementStrategy: Optional[PlacementStrategies] = None
    platformVersion: Optional[String] = None
    propagateTags: Optional[PropagateTags] = None
    referenceId: Optional[String] = None
    startedBy: Optional[String] = None
    tags: Optional[Tags] = None
    taskDefinition: String


class StartTaskRequest(BaseModel):
    cluster: Optional[String] = None
    containerInstances: StringList
    enableECSManagedTags: Optional[Boolean] = None
    enableExecuteCommand: Optional[Boolean] = None
    group: Optional[String] = None
    networkConfiguration: Optional[NetworkConfiguration] = None
    overrides: Optional[TaskOverride] = None
    propagateTags: Optional[PropagateTags] = None
    referenceId: Optional[String] = None
    startedBy: Optional[String] = None
    tags: Optional[Tags] = None
    taskDefinition: String


class Task(BaseModel):
    attachments: Optional[Attachments] = None
    attributes: Optional[Attributes] = None
    availabilityZone: Optional[String] = None
    capacityProviderName: Optional[String] = None
    clusterArn: Optional[String] = None
    connectivity: Optional[Connectivity] = None
    connectivityAt: Optional[Timestamp] = None
    containerInstanceArn: Optional[String] = None
    containers: Optional[Containers] = None
    cpu: Optional[String] = None
    createdAt: Optional[Timestamp] = None
    desiredStatus: Optional[String] = None
    enableExecuteCommand: Optional[Boolean] = None
    ephemeralStorage: Optional[EphemeralStorage] = None
    executionStoppedAt: Optional[Timestamp] = None
    group: Optional[String] = None
    healthStatus: Optional[HealthStatus] = None
    inferenceAccelerators: Optional[InferenceAccelerators] = None
    lastStatus: Optional[String] = None
    launchType: Optional[LaunchType] = None
    memory: Optional[String] = None
    overrides: Optional[TaskOverride] = None
    platformFamily: Optional[String] = None
    platformVersion: Optional[String] = None
    pullStartedAt: Optional[Timestamp] = None
    pullStoppedAt: Optional[Timestamp] = None
    startedAt: Optional[Timestamp] = None
    startedBy: Optional[String] = None
    stopCode: Optional[TaskStopCode] = None
    stoppedAt: Optional[Timestamp] = None
    stoppedReason: Optional[String] = None
    stoppingAt: Optional[Timestamp] = None
    tags: Optional[Tags] = None
    taskArn: Optional[String] = None
    taskDefinitionArn: Optional[String] = None
    version: Optional[Long] = None


class Tasks(RootModel[List[Task]]):
    root: List[Task]


class UpdateClusterResponse(BaseModel):
    cluster: Optional[Cluster] = None


class UpdateClusterSettingsResponse(BaseModel):
    cluster: Optional[Cluster] = None


class DescribeTasksResponse(BaseModel):
    failures: Optional[Failures] = None
    tasks: Optional[Tasks] = None


class RunTaskResponse(BaseModel):
    failures: Optional[Failures] = None
    tasks: Optional[Tasks] = None


class StartTaskResponse(BaseModel):
    failures: Optional[Failures] = None
    tasks: Optional[Tasks] = None


class StopTaskResponse(BaseModel):
    task: Optional[Task] = None
